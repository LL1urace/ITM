# Практика:
# Примечание: Во всех задачах данные должны вводится пользователем,
# это можно реализовать с помощью функции input.
# Например, начинаем выполнять первую задачу из блока If Else:
# first_number = int(input(«Введите первое число»))
# second_number = int(input(«Введите второе число»))
# third_number = int(input(«Введите третье число»))
#
# Switch Case
# 3. Даны два целых числа: D (день) и M (месяц), определяющие правильную дату невисокосного года.
# Вывести значения D и M для даты, следующей за указанной.
def next_date() -> None:
    """Вывод значений дня и месяца для даты следующей за указанной"""
    print("Вывод значений дня и месяца для даты следующей за указанной")
    d = input("Введите номер дня (1-31): ")
    m = input("Введите номер месяца (1-12): ")

    try:
        d = int(d)
        m = int(m)
    except ValueError:
        print("Ошибка-ввода: значения для дней и месяца должны быть целыми числами")
        return

    match d, m:
        case (d, m) if 1 <= d < 30 and m in [4, 6, 9, 11]: # Месяцы с 30 днями
            print(f"Следующая дата: {d + 1}.{m}")
        case (30, m) if m in [4, 6, 9, 11]: # Переход на следующий месяц в месяце с 30 днями
            print(f"Следующая дата: 1.{m + 1}")
        case (31, 12):  # Переход на следующий год
            print("Следующая дата: 1.1")
            print("C новым годом!")
        case (d, m) if 1 <= d < 31 and m in [1, 3, 5, 7, 8, 10, 12]: # Месяцы с 31 днями
            print(f"Следующая дата: {d + 1}.{m}")
        case (31, m) if m in [1, 3, 5, 7, 8, 10, 12]: # Переход на следующий месяц в месяце с 31 днем
            print(f"Следующая дата: 1.{m + 1}")
        case (d, 2) if 1 <= d < 28: # Февраль
            print(f"Следующая дата: {d + 1}.{m}")
        case (28, 2): # Переход на следующий месяц в Феврале
            print(f"Следующая дата: 1.{m + 1}")
        case _:
            print("Ошибка-ввода: значение даты некорректно")



next_date()