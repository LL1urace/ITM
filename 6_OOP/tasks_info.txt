Практика

1. Посмотрите первые 21 видео про ООП на python
https://www.youtube.com/watch?v=Z7AY41tE-3U&list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E

2. Прочитайте статью по магическим методам https://habr.com/ru/articles/186608/
3. Создайте класс MeansOfTransport }}(для определения цвета и марки машины),
принимающий 2 аргумента при инициализации (марка и цвет транспортного средства).
В этом классе реализуйте методы {{show_color(), выводящий на печать цвет транспортного средства
и show_brand, для получения марки транспортного средства.

4. Работаем с классом из 3 пункта. Реализуйте сеттеры и геттеры для цвета и марки транспортного средства.
5. Реализуйте два класса Car и Moped, которые будут наследоваться от класса MeansOfTransport.
При инициализации они должны принимать новый аргументы(количество колес).

6. В классе {{Moped}}напишите статическую функцию, которая на вход будет принимать расстояние и
максимальную скорость, а на выходе получать время, за которое проедет мопед это расстояние.

7. Попробуйте инициализировать несколько любых переменных в классе Car и сделайте одну переменную
приватной, одну защищенной. Попробуйте получить к ним доступ. Какой результат?

8. В классе Car добавьте переменную класса car_drive = 4 и реализуйте classmethod,
который выводит на экран переменную car_drive

9. Реализуйте все возможные магические методы в классе Car.
10. Реализуйте класс Calculator, в котором будет один метод, для вычисления суммы двух чисел.
Реализуйте еще один класс, который будет наследоваться от класса Calculator и перегрузите метод для вычисления суммы двух чисел, чтобы он делал конкатенацию двух строк.

11. Реализуйте абстрактный класс Animals, создайте класс Cat, который будет наследоваться от класса Animals и реализуйте метод voice.
12. Прочитайте статью и выполните действия, которые в ней прописаны https://pythonist.ru/vvedenie-v-mnozhestvennoe-nasledovanie-i-super/
13. Реализуйте класс Dog. Придумайте, какие переменные будет принимать данный класс и какие методы будут реализованы. Реализуйте в этом классе паттерн Singleton
Пример: https://pythonpip.ru/osnovy/shablon-proektirovaniya-singleton-v-python

14. Напишите класс, который принимает список людей с интерфейсом добавления новых и при итерации возвращал имена людей
15. Напишите класс, содержит 3 любые атрибута и при изменении логгировать всё в консоль (при изменении старое->новое)